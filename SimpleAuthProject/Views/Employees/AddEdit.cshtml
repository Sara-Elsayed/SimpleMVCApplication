@model EmployeeViewModel

@{
    ViewBag.Title = ViewBag.Action;
}

<h2>@ViewBag.Action Employee</h2>

@*using desposes object after action ends*@

@using (Html.BeginForm(ViewBag.Action as string, "Employees", FormMethod.Post))
{
    if (ViewBag.Action == "Edit")
    {
        @Html.HiddenFor(e => e.Employee.Id);
    }
    <div class="form-group">
        <label>Name</label>
        @Html.TextBoxFor(e => e.Employee.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.Employee.Name)
    </div>
    <div class="form-group">
        <label>Age</label>
        @Html.TextBoxFor(e => e.Employee.Age, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.Employee.Age)
    </div>
    <div class="form-group">
        <label>Gender</label>
        @Html.EnumDropDownListFor(e => e.Employee.Gender, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.Employee.Gender)
    </div>
    <div class="form-group">
        <label>Email</label>
        @Html.TextBoxFor(e => e.Employee.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.Employee.Email)
    </div>
    <div class="form-group">
        <label>Department</label>
        @Html.DropDownListFor(e => e.Employee.Fk_DepartmentId,
        new SelectList(Model.Departments,"Id","Name"),
        "Select Department",
        new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.Employee.Fk_DepartmentId)
    </div>
    <div>
        <input type="submit" value="@ViewBag.Action" class="btn btn-primary" />
        <a href="/employees/Index" class="btn btn-success">Back To Start</a>
    </div>
}