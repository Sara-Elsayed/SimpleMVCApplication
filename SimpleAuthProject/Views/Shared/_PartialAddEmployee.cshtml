@model EmployeeViewModel

@{ 
    var options = new AjaxOptions
    {
        HttpMethod = "POST",
        InsertionMode = InsertionMode.InsertAfter,//am telling him to insert one row 
        UpdateTargetId="tbody",//insert after the last one in tbody like append in js
        OnSuccess= "addSuccess"
    };
}
<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Add Employee</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            @using (Ajax.BeginForm("Add", "Employees",options))
            {
                <div class="modal-body">
                    <div class="form-group">
                        <label>Name</label>
                        @Html.TextBoxFor(e => e.Employee.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(e => e.Employee.Name)
                    </div>
                    <div class="form-group">
                        <label>Age</label>
                        @Html.TextBoxFor(e => e.Employee.Age, new { @class = "form-control" })
                        @Html.ValidationMessageFor(e => e.Employee.Age)
                    </div>
                    <div class="form-group">
                        <label>Gender</label>
                        @Html.EnumDropDownListFor(e => e.Employee.Gender, new { @class = "form-control" })
                        @Html.ValidationMessageFor(e => e.Employee.Gender)
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        @Html.TextBoxFor(e => e.Employee.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(e => e.Employee.Email)
                    </div>
                    <div class="form-group">
                        <label>Department</label>
                        @Html.DropDownListFor(e => e.Employee.Fk_DepartmentId,
        new SelectList(Model.Departments, "Id", "Name"),
        "Select Department",
        new { @class = "form-control" })
                        @Html.ValidationMessageFor(e => e.Employee.Fk_DepartmentId)
                    </div>
                <div>
                    <a href="/employees/Index" class="btn btn-success">Back To Start</a>
                </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" value="Add">Save changes</button>
                    
                </div>
                    }
            </div>
        </div>
    </div>
